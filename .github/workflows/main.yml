name: 'Create release'
on:
  push:
    branches:
      - 'main'

jobs:
  prepare:
    name: Latest commit
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.latest_commit.outputs.commit }}
      tagname: ${{ steps.get_tag.outputs.tagname }}
    steps:
    - name: Clone 
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set latest_commit
      id: latest_commit
      run: echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Get latest tag
      id: get_tag
      run: echo "tagname=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
  
  release:
    name: Create GitHub Release
    needs: [prepare]
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
      if: github.event_name != 'push'

    - name: Set tag name
      id: tag
      run: |
        if [[ "${{ github.event_name }}" != "push" ]]; then
          tag=v$(date +%Y%m%d.%H%M%S)
        else
          tag="${{ needs.prepare.outputs.tagname }}"
        fi
        echo "tag=$tag" >> $GITHUB_OUTPUT
    
    - name: Create Release
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO: ${{ github.repository }}
      run: |
        tag="${{ needs.prepare.outputs.tagname }}"
        body="RaidTeamDecorator@${{ needs.prepare.outputs.commit }}"
        gh release create --draft "$tag" --title "$tag" --notes "$body"
  build:
    needs: [prepare, release]
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v4
    
    - name: Zip Folder
      run: |
        cd ../
        rm -rf RaidTeamDecorator.zip
        zip -r RaidTeamDecorator-${{ needs.prepare.outputs.tagname }}.zip RaidTeamDecorator -x "RaidTeamDecorator/.git/*" "RaidTeamDecorator/.github/*"

    - name: Upload
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO: ${{ github.repository }}
      run: |
        cd ../
        gh release upload "${{ needs.prepare.outputs.tagname }}" "RaidTeamDecorator_${{ needs.prepare.outputs.tagname }}.zip"

  publish:
    name: Publish Release
    needs: [release, build]
    runs-on: ubuntu-latest
    environment: Release
    steps:
    - name: Publish Release
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO: ${{ github.repository }}
      run: gh release edit "${{ needs.prepare.outputs.tagname }}" --draft=false
